/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package io.confluent.developer.avro.out;

import org.apache.avro.specific.SpecificData;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class SEL1052R1 extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -4916713553915820774L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"SEL1052R1\",\"namespace\":\"io.confluent.developer.avro.out\",\"fields\":[{\"name\":\"metadado\",\"type\":{\"type\":\"record\",\"name\":\"Metadado\",\"fields\":[{\"name\":\"tipo\",\"type\":\"string\",\"avro.java.string\":\"String\"},{\"name\":\"versao\",\"type\":\"string\",\"avro.java.string\":\"String\"}]}},{\"name\":\"header\",\"type\":{\"type\":\"record\",\"name\":\"Header\",\"fields\":[{\"name\":\"codMsg\",\"type\":\"string\",\"avro.java.string\":\"String\"},{\"name\":\"numSeq\",\"type\":\"int\"}]}},{\"name\":\"mensagem\",\"type\":{\"type\":\"record\",\"name\":\"Mensagem\",\"fields\":[{\"name\":\"numCtrlIF\",\"type\":\"string\",\"avro.java.string\":\"String\"},{\"name\":\"sitOpSEL\",\"type\":\"string\",\"avro.java.string\":\"String\"}]}}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<SEL1052R1> ENCODER =
      new BinaryMessageEncoder<SEL1052R1>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<SEL1052R1> DECODER =
      new BinaryMessageDecoder<SEL1052R1>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   */
  public static BinaryMessageDecoder<SEL1052R1> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   */
  public static BinaryMessageDecoder<SEL1052R1> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<SEL1052R1>(MODEL$, SCHEMA$, resolver);
  }

  /** Serializes this SEL1052R1 to a ByteBuffer. */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /** Deserializes a SEL1052R1 from a ByteBuffer. */
  public static SEL1052R1 fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  @Deprecated public io.confluent.developer.avro.out.Metadado metadado;
  @Deprecated public io.confluent.developer.avro.out.Header header;
  @Deprecated public io.confluent.developer.avro.out.Mensagem mensagem;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public SEL1052R1() {}

  /**
   * All-args constructor.
   * @param metadado The new value for metadado
   * @param header The new value for header
   * @param mensagem The new value for mensagem
   */
  public SEL1052R1(io.confluent.developer.avro.out.Metadado metadado, io.confluent.developer.avro.out.Header header, io.confluent.developer.avro.out.Mensagem mensagem) {
    this.metadado = metadado;
    this.header = header;
    this.mensagem = mensagem;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return metadado;
    case 1: return header;
    case 2: return mensagem;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: metadado = (io.confluent.developer.avro.out.Metadado)value$; break;
    case 1: header = (io.confluent.developer.avro.out.Header)value$; break;
    case 2: mensagem = (io.confluent.developer.avro.out.Mensagem)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'metadado' field.
   * @return The value of the 'metadado' field.
   */
  public io.confluent.developer.avro.out.Metadado getMetadado() {
    return metadado;
  }

  /**
   * Sets the value of the 'metadado' field.
   * @param value the value to set.
   */
  public void setMetadado(io.confluent.developer.avro.out.Metadado value) {
    this.metadado = value;
  }

  /**
   * Gets the value of the 'header' field.
   * @return The value of the 'header' field.
   */
  public io.confluent.developer.avro.out.Header getHeader() {
    return header;
  }

  /**
   * Sets the value of the 'header' field.
   * @param value the value to set.
   */
  public void setHeader(io.confluent.developer.avro.out.Header value) {
    this.header = value;
  }

  /**
   * Gets the value of the 'mensagem' field.
   * @return The value of the 'mensagem' field.
   */
  public io.confluent.developer.avro.out.Mensagem getMensagem() {
    return mensagem;
  }

  /**
   * Sets the value of the 'mensagem' field.
   * @param value the value to set.
   */
  public void setMensagem(io.confluent.developer.avro.out.Mensagem value) {
    this.mensagem = value;
  }

  /**
   * Creates a new SEL1052R1 RecordBuilder.
   * @return A new SEL1052R1 RecordBuilder
   */
  public static io.confluent.developer.avro.out.SEL1052R1.Builder newBuilder() {
    return new io.confluent.developer.avro.out.SEL1052R1.Builder();
  }

  /**
   * Creates a new SEL1052R1 RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new SEL1052R1 RecordBuilder
   */
  public static io.confluent.developer.avro.out.SEL1052R1.Builder newBuilder(io.confluent.developer.avro.out.SEL1052R1.Builder other) {
    return new io.confluent.developer.avro.out.SEL1052R1.Builder(other);
  }

  /**
   * Creates a new SEL1052R1 RecordBuilder by copying an existing SEL1052R1 instance.
   * @param other The existing instance to copy.
   * @return A new SEL1052R1 RecordBuilder
   */
  public static io.confluent.developer.avro.out.SEL1052R1.Builder newBuilder(io.confluent.developer.avro.out.SEL1052R1 other) {
    return new io.confluent.developer.avro.out.SEL1052R1.Builder(other);
  }

  /**
   * RecordBuilder for SEL1052R1 instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<SEL1052R1>
    implements org.apache.avro.data.RecordBuilder<SEL1052R1> {

    private io.confluent.developer.avro.out.Metadado metadado;
    private io.confluent.developer.avro.out.Metadado.Builder metadadoBuilder;
    private io.confluent.developer.avro.out.Header header;
    private io.confluent.developer.avro.out.Header.Builder headerBuilder;
    private io.confluent.developer.avro.out.Mensagem mensagem;
    private io.confluent.developer.avro.out.Mensagem.Builder mensagemBuilder;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(io.confluent.developer.avro.out.SEL1052R1.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.metadado)) {
        this.metadado = data().deepCopy(fields()[0].schema(), other.metadado);
        fieldSetFlags()[0] = true;
      }
      if (other.hasMetadadoBuilder()) {
        this.metadadoBuilder = io.confluent.developer.avro.out.Metadado.newBuilder(other.getMetadadoBuilder());
      }
      if (isValidValue(fields()[1], other.header)) {
        this.header = data().deepCopy(fields()[1].schema(), other.header);
        fieldSetFlags()[1] = true;
      }
      if (other.hasHeaderBuilder()) {
        this.headerBuilder = io.confluent.developer.avro.out.Header.newBuilder(other.getHeaderBuilder());
      }
      if (isValidValue(fields()[2], other.mensagem)) {
        this.mensagem = data().deepCopy(fields()[2].schema(), other.mensagem);
        fieldSetFlags()[2] = true;
      }
      if (other.hasMensagemBuilder()) {
        this.mensagemBuilder = io.confluent.developer.avro.out.Mensagem.newBuilder(other.getMensagemBuilder());
      }
    }

    /**
     * Creates a Builder by copying an existing SEL1052R1 instance
     * @param other The existing instance to copy.
     */
    private Builder(io.confluent.developer.avro.out.SEL1052R1 other) {
            super(SCHEMA$);
      if (isValidValue(fields()[0], other.metadado)) {
        this.metadado = data().deepCopy(fields()[0].schema(), other.metadado);
        fieldSetFlags()[0] = true;
      }
      this.metadadoBuilder = null;
      if (isValidValue(fields()[1], other.header)) {
        this.header = data().deepCopy(fields()[1].schema(), other.header);
        fieldSetFlags()[1] = true;
      }
      this.headerBuilder = null;
      if (isValidValue(fields()[2], other.mensagem)) {
        this.mensagem = data().deepCopy(fields()[2].schema(), other.mensagem);
        fieldSetFlags()[2] = true;
      }
      this.mensagemBuilder = null;
    }

    /**
      * Gets the value of the 'metadado' field.
      * @return The value.
      */
    public io.confluent.developer.avro.out.Metadado getMetadado() {
      return metadado;
    }

    /**
      * Sets the value of the 'metadado' field.
      * @param value The value of 'metadado'.
      * @return This builder.
      */
    public io.confluent.developer.avro.out.SEL1052R1.Builder setMetadado(io.confluent.developer.avro.out.Metadado value) {
      validate(fields()[0], value);
      this.metadadoBuilder = null;
      this.metadado = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'metadado' field has been set.
      * @return True if the 'metadado' field has been set, false otherwise.
      */
    public boolean hasMetadado() {
      return fieldSetFlags()[0];
    }

    /**
     * Gets the Builder instance for the 'metadado' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public io.confluent.developer.avro.out.Metadado.Builder getMetadadoBuilder() {
      if (metadadoBuilder == null) {
        if (hasMetadado()) {
          setMetadadoBuilder(io.confluent.developer.avro.out.Metadado.newBuilder(metadado));
        } else {
          setMetadadoBuilder(io.confluent.developer.avro.out.Metadado.newBuilder());
        }
      }
      return metadadoBuilder;
    }

    /**
     * Sets the Builder instance for the 'metadado' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */
    public io.confluent.developer.avro.out.SEL1052R1.Builder setMetadadoBuilder(io.confluent.developer.avro.out.Metadado.Builder value) {
      clearMetadado();
      metadadoBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'metadado' field has an active Builder instance
     * @return True if the 'metadado' field has an active Builder instance
     */
    public boolean hasMetadadoBuilder() {
      return metadadoBuilder != null;
    }

    /**
      * Clears the value of the 'metadado' field.
      * @return This builder.
      */
    public io.confluent.developer.avro.out.SEL1052R1.Builder clearMetadado() {
      metadado = null;
      metadadoBuilder = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'header' field.
      * @return The value.
      */
    public io.confluent.developer.avro.out.Header getHeader() {
      return header;
    }

    /**
      * Sets the value of the 'header' field.
      * @param value The value of 'header'.
      * @return This builder.
      */
    public io.confluent.developer.avro.out.SEL1052R1.Builder setHeader(io.confluent.developer.avro.out.Header value) {
      validate(fields()[1], value);
      this.headerBuilder = null;
      this.header = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'header' field has been set.
      * @return True if the 'header' field has been set, false otherwise.
      */
    public boolean hasHeader() {
      return fieldSetFlags()[1];
    }

    /**
     * Gets the Builder instance for the 'header' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public io.confluent.developer.avro.out.Header.Builder getHeaderBuilder() {
      if (headerBuilder == null) {
        if (hasHeader()) {
          setHeaderBuilder(io.confluent.developer.avro.out.Header.newBuilder(header));
        } else {
          setHeaderBuilder(io.confluent.developer.avro.out.Header.newBuilder());
        }
      }
      return headerBuilder;
    }

    /**
     * Sets the Builder instance for the 'header' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */
    public io.confluent.developer.avro.out.SEL1052R1.Builder setHeaderBuilder(io.confluent.developer.avro.out.Header.Builder value) {
      clearHeader();
      headerBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'header' field has an active Builder instance
     * @return True if the 'header' field has an active Builder instance
     */
    public boolean hasHeaderBuilder() {
      return headerBuilder != null;
    }

    /**
      * Clears the value of the 'header' field.
      * @return This builder.
      */
    public io.confluent.developer.avro.out.SEL1052R1.Builder clearHeader() {
      header = null;
      headerBuilder = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'mensagem' field.
      * @return The value.
      */
    public io.confluent.developer.avro.out.Mensagem getMensagem() {
      return mensagem;
    }

    /**
      * Sets the value of the 'mensagem' field.
      * @param value The value of 'mensagem'.
      * @return This builder.
      */
    public io.confluent.developer.avro.out.SEL1052R1.Builder setMensagem(io.confluent.developer.avro.out.Mensagem value) {
      validate(fields()[2], value);
      this.mensagemBuilder = null;
      this.mensagem = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'mensagem' field has been set.
      * @return True if the 'mensagem' field has been set, false otherwise.
      */
    public boolean hasMensagem() {
      return fieldSetFlags()[2];
    }

    /**
     * Gets the Builder instance for the 'mensagem' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public io.confluent.developer.avro.out.Mensagem.Builder getMensagemBuilder() {
      if (mensagemBuilder == null) {
        if (hasMensagem()) {
          setMensagemBuilder(io.confluent.developer.avro.out.Mensagem.newBuilder(mensagem));
        } else {
          setMensagemBuilder(io.confluent.developer.avro.out.Mensagem.newBuilder());
        }
      }
      return mensagemBuilder;
    }

    /**
     * Sets the Builder instance for the 'mensagem' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */
    public io.confluent.developer.avro.out.SEL1052R1.Builder setMensagemBuilder(io.confluent.developer.avro.out.Mensagem.Builder value) {
      clearMensagem();
      mensagemBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'mensagem' field has an active Builder instance
     * @return True if the 'mensagem' field has an active Builder instance
     */
    public boolean hasMensagemBuilder() {
      return mensagemBuilder != null;
    }

    /**
      * Clears the value of the 'mensagem' field.
      * @return This builder.
      */
    public io.confluent.developer.avro.out.SEL1052R1.Builder clearMensagem() {
      mensagem = null;
      mensagemBuilder = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public SEL1052R1 build() {
      try {
        SEL1052R1 record = new SEL1052R1();
        if (metadadoBuilder != null) {
          record.metadado = this.metadadoBuilder.build();
        } else {
          record.metadado = fieldSetFlags()[0] ? this.metadado : (io.confluent.developer.avro.out.Metadado) defaultValue(fields()[0]);
        }
        if (headerBuilder != null) {
          record.header = this.headerBuilder.build();
        } else {
          record.header = fieldSetFlags()[1] ? this.header : (io.confluent.developer.avro.out.Header) defaultValue(fields()[1]);
        }
        if (mensagemBuilder != null) {
          record.mensagem = this.mensagemBuilder.build();
        } else {
          record.mensagem = fieldSetFlags()[2] ? this.mensagem : (io.confluent.developer.avro.out.Mensagem) defaultValue(fields()[2]);
        }
        return record;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<SEL1052R1>
    WRITER$ = (org.apache.avro.io.DatumWriter<SEL1052R1>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<SEL1052R1>
    READER$ = (org.apache.avro.io.DatumReader<SEL1052R1>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}
